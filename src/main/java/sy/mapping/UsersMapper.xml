<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sy.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="sy.model.Users" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="user_pass" property="userPass" jdbcType="VARCHAR" />
    <result column="user_nicename" property="userNicename" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_registered" property="userRegistered" jdbcType="TIMESTAMP" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_right" property="userRight" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, user_pass, user_nicename, user_email, user_registered, user_status, 
    user_right
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="sy.model.Users" >
    insert into users (id, username, user_pass, 
      user_nicename, user_email, user_registered, 
      user_status, user_right)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{userPass,jdbcType=VARCHAR}, 
      #{userNicename,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userRegistered,jdbcType=TIMESTAMP}, 
      #{userStatus,jdbcType=INTEGER}, #{userRight,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="sy.model.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="userPass != null" >
        user_pass,
      </if>
      <if test="userNicename != null" >
        user_nicename,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userRegistered != null" >
        user_registered,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userRight != null" >
        user_right,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null" >
        #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userNicename != null" >
        #{userNicename,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userRegistered != null" >
        #{userRegistered,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userRight != null" >
        #{userRight,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="sy.model.Users" >
    update users
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userPass != null" >
        user_pass = #{userPass,jdbcType=VARCHAR},
      </if>
      <if test="userNicename != null" >
        user_nicename = #{userNicename,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userRegistered != null" >
        user_registered = #{userRegistered,jdbcType=TIMESTAMP},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userRight != null" >
        user_right = #{userRight,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="sy.model.Users" >
    update users
    set username = #{username,jdbcType=VARCHAR},
      user_pass = #{userPass,jdbcType=VARCHAR},
      user_nicename = #{userNicename,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_registered = #{userRegistered,jdbcType=TIMESTAMP},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_right = #{userRight,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>